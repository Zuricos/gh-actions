name: Build and publish Docker Image

inputs:
  context:
    description: "Context to use for the build"
    type: string
    required: true
  dockerfile:
    description: "Path to the Dockerfile"
    type: string
    required: true
  image-name:
    description: "Name of the image"
    type: string
    required: true
  version-tag:
    description: "Version suffix to use for the image"
    type: string
    required: true
  github-token:
    description: "GitHub token to use for authentication, with at least packages:write permissions"
    type: string
    required: true
  build-args:
    description: "Additional build arguments to use for the image"
    type: string
    required: false
  platforms:
    description: "Platforms to build for"
    type: string
    required: false
    default: "linux/amd64, linux/arm64"

runs:
  using: "composite"
  steps:
    - name: Determine build type
      id: build_type
      run: |
        echo "type=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'prod' || 'dev' }}" >> $GITHUB_OUTPUT
      shell: bash
    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v3
    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}
    - name: Set latest or latest-dev
      id: set_latest
      run: |
        echo "latest-tag=${{ steps.build_type.outputs.type == 'prod' && 'latest' || 'latest-dev' }}" >> $GITHUB_OUTPUT
      shell: bash
    - name: Build and publish image
      uses: docker/build-push-action@v6
      with:
        platforms: ${{ inputs.platforms }}
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        push: true
        build-args: |
          VERSION_SUFFIX=${{ inputs.version-tag }}
          ${{ inputs.build-args }}
        tags: |
          ghcr.io/zuricos/${{ inputs.image-name }}:${{ steps.set_latest.outputs.latest-tag }}
          ghcr.io/zuricos/${{ inputs.image-name }}:${{ inputs.version-tag }}
        cache-from: type=gha
        cache-to: type=gha,mode=max